<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
                    xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">


    <!-- =============================================================================== -->
    <!-- PropertyGrid                                                                    -->
    <!-- =============================================================================== -->

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <xceed:InverseBoolConverter x:Key="InverseBoolConverter" />
    <xceed:ExpandableObjectMarginConverter x:Key="ExpandableObjectMarginConverter" />

    <x:Static x:Key="EmptyString" Member="sys:String.Empty" />

    <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#FFFFB700" />
    <LinearGradientBrush x:Key="MouseOverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFFEFBF4" />
        <GradientStop Offset="0.19" Color="#FFFDE7CE" />
        <GradientStop Offset="0.39" Color="#FFFDDEB8" />
        <GradientStop Offset="0.39" Color="#FFFFCE6B" />
        <GradientStop Offset="0.79" Color="#FFFFDE9A" />
        <GradientStop Offset="1" Color="#FFFFEBAA" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CheckedBorderBrush" Color="#FFC29B29" />
    <LinearGradientBrush x:Key="CheckedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFFFDCA0" />
        <GradientStop Offset="0.18" Color="#FFFFD692" />
        <GradientStop Offset="0.39" Color="#FFFFC45D" />
        <GradientStop Offset="1" Color="#FFFFD178" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PressedBorderBrush" Color="#FFC29B29" />
    <LinearGradientBrush x:Key="PressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFE3C085" />
        <GradientStop Offset="0.19" Color="#FFF4CC89" />
        <GradientStop Offset="0.36" Color="#FFF5C777" />
        <GradientStop Offset="0.36" Color="#FFF5BB56" />
        <GradientStop Offset="0.79" Color="#FFF4CE9A" />
        <GradientStop Offset="1" Color="#FFF3E28D" />
    </LinearGradientBrush>

 
    <Style x:Key="OptionsToggleButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="900" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" />
                        <Border x:Name="MiddleBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Red" CornerRadius="2">
                            <Border x:Name="InnerBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2" Padding="{TemplateBinding Padding}">
                                <StackPanel x:Name="StackPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                    <ContentPresenter x:Name="Content"
                                             Content="{TemplateBinding Content}"
                                             Margin="1"
                                             RenderOptions.BitmapScalingMode="NearestNeighbor"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                </StackPanel>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource MouseOverBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource MouseOverBorderBrush}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Content" Value="0.5" />
                            <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="#FF9E9E9E" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource CheckedBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource CheckedBorderBrush}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#FFE7CBAD" Offset="0" />
                                        <GradientStop Color="#FFF7D7B5" Offset="0.1" />
                                        <GradientStop Color="#FFFFD38C" Offset="0.36" />
                                        <GradientStop Color="#FFFFC75A" Offset="0.36" />
                                        <GradientStop Color="#FFFFEFA5" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{StaticResource PressedBackgroundBrush}" />
                            <Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource PressedBorderBrush}" />
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="Transparent" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="MiddleBorder">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#40FFFEFE" Offset="0" />
                                        <GradientStop Color="#40FFFEFE" Offset="0.39" />
                                        <GradientStop Color="#20FFCE68" Offset="0.39" />
                                        <GradientStop Color="#20FFCE68" Offset="0.69" />
                                        <GradientStop Color="#10FFFFFF" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearFilterButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="900" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="2" />
                        <Border x:Name="MiddleBorder" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" CornerRadius="2">
                            <Border x:Name="InnerBorder" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" CornerRadius="2" Padding="{TemplateBinding Padding}">
                                <StackPanel x:Name="StackPanel" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                    <ContentPresenter x:Name="Content"
                                             Content="{TemplateBinding Content}"
                                             Margin="1"
                                             RenderOptions.BitmapScalingMode="NearestNeighbor"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                </StackPanel>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource PanelBackground}" />
                            <Setter Property="Background" TargetName="MiddleBorder" Value="{DynamicResource PanelBackground}" />
                            <Setter Property="Background" TargetName="InnerBorder" Value="{DynamicResource PanelBackground}" />
                            <!--<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource MouseOverBorderBrush}" />-->
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Content" Value="0.5" />
                            <Setter Property="TextElement.Foreground" TargetName="OuterBorder" Value="#FF9E9E9E" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource PanelBackground}" />
                            <Setter Property="Background" TargetName="MiddleBorder" Value="{DynamicResource PanelBackground}" />
                            <Setter Property="Background" TargetName="InnerBorder" Value="{DynamicResource PanelBackground}" />
                            <!--<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{StaticResource PressedBorderBrush}" />-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="GlyphBrush" Color="#FF31347C" />

 

    <ContextMenu x:Key="{ComponentResourceKey 
                  TypeInTargetAssembly={x:Type xceed:PropertyGrid}, 
                  ResourceId=SelectedObjectAdvancedOptionsMenu}">
        <MenuItem Header="Reset Value" Command="xceed:PropertyItemCommands.ResetValue" />
    </ContextMenu>

    <!--<Style TargetType="{x:Type xceed:PropertyItemBase}">

        <Setter Property="Background" Value="{DynamicResource PanelBackground}" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xceed:PropertyItemBase}">
                    <Border ContextMenu="{Binding AdvancedOptionsMenu, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xceed:PropertyGrid}}" 
                       ContextMenuService.Placement="Bottom">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding NameColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xceed:PropertyGrid}}}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_Name"
                             Background="{DynamicResource PanelBackground}" 
                             Margin="0,0,1,0" 
                             VerticalAlignment="Stretch" 
                             HorizontalAlignment="Stretch">
                                <Grid Margin="2,2,2,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Margin="{Binding Level, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExpandableObjectMarginConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <ToggleButton Grid.Column="0"
                                            Template="{StaticResource ExpanderToggleButton}"
                                            OverridesDefaultStyle="True"
                                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                            Visibility="{Binding IsExpandable, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                        <TextBlock Grid.Column="1" Text="{Binding DisplayName, RelativeSource={RelativeSource TemplatedParent}}" 
                                         HorizontalAlignment="Stretch" 
                                         VerticalAlignment="Center"
                                         TextTrimming="CharacterEllipsis"
                                                   />
                                    </Grid>
                                    utilities:ContextMenuUtilities.OpenOnMouseLeftButtonClick="True"
                                    <Grid Grid.Column="1"
                                 HorizontalAlignment="Right"
                                 Margin="5,0,5,0"
                                 Visibility="{Binding ShowAdvancedOptions, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xceed:PropertyGrid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                
                                 ContextMenu="{Binding AdvancedOptionsMenu, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xceed:PropertyGrid}}">

                                        <Image x:Name="_optionsImage"
                                     Width="11"
                                     Height="11"
                                     Source="{Binding AdvancedOptionsIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                     ToolTip="{Binding AdvancedOptionsTooltip, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Grid>
                            </Border>

                            <Border x:Name="PART_Editor" Grid.Column="1" 
                           Background="{TemplateBinding Background}" 
                           VerticalAlignment="Stretch" 
                           HorizontalAlignment="Stretch">
                                <ContentControl x:Name="PART_ValueContainer" 
                                          Content="{TemplateBinding Editor}" 
                                          Focusable="False" IsTabStop="False" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xceed:PropertyGrid}, Converter={StaticResource InverseBoolConverter}}" >
                                </ContentControl>
                            </Border>

                            <Expander x:Name="_propertyExpander" Grid.ColumnSpan="2" Grid.Row="1" IsExpanded="{TemplateBinding IsExpanded}" Style="{StaticResource PropertyExpanderStyle}" IsEnabled="True">
                                <xceed:PropertyItemsControl x:Name="PART_PropertyItemsControl" IsTabStop="False" Focusable="False"
                                                 ItemsSource="{Binding Properties, RelativeSource={RelativeSource TemplatedParent}}"
                                                 ItemContainerStyle="{Binding PropertyContainerStyle, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </xceed:PropertyItemsControl>
                            </Expander>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Name" Property="Background" Value="#CED4DF" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_Name" Property="Background" Value="#43577B" />
                            <Setter TargetName="PART_Name" Property="TextElement.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="PART_ValueContainer"  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"  />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="{x:Type xceed:PropertyGrid}">
        <Style.Resources>
            <xceed:SelectedObjectConverter x:Key="objectConverter" />
            
        </Style.Resources>
        <Setter Property="PropertyContainerStyle" Value="{DynamicResource PIB}" />
        <Setter Property="Background" Value="{DynamicResource PanelBackground}" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SelectedObjectType" Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedObject, Converter={StaticResource objectConverter}, ConverterParameter=Type}" />
        <Setter Property="SelectedObjectTypeName" Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedObject, Converter={StaticResource objectConverter}, ConverterParameter=TypeName}" />
        <Setter Property="SelectedObjectName" Value="{Binding RelativeSource={RelativeSource Self}, Path=SelectedObject.Name, FallbackValue={StaticResource EmptyString}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xceed:PropertyGrid}">
                    <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!--<StackPanel Orientation="Horizontal" Margin="6,2,0,4"
                                 Visibility="{Binding ShowTitle, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock Text="{TemplateBinding SelectedObjectTypeName}" FontWeight="Bold" />
                                <TextBlock Text="{TemplateBinding SelectedObjectName}" Margin="5,0,0,0" />
                            </StackPanel>-->

                            <Grid x:Name="toolsContainer" Grid.Row="1" Margin="0,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--<Grid x:Name="sortButtonContainer" Margin="4" Visibility="{Binding ShowSortOptions, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <StackPanel Orientation="Horizontal" Margin="1" >
                                        <RadioButton IsChecked="{Binding IsCategorized, RelativeSource={RelativeSource TemplatedParent}}"
                                           VerticalAlignment="Center"
                                           Style="{StaticResource OptionsToggleButtonStyle}"
                                           ToolTip="Categorized">
                                            <Image Source="/Gibbo.Editor.WPF;component/Gibbo.Content/Categorize16.png" Width="16" Height="16" />
                                        </RadioButton>
                                        <RadioButton IsChecked="{Binding IsCategorized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}, Mode=OneWay}"
                                           VerticalAlignment="Center"
                                           Style="{StaticResource OptionsToggleButtonStyle}"
                                           ToolTip="Alphabetical">
                                            <Image Source="/Gibbo.Editor.WPF;component/Gibbo.Content/SortAscending16.png" Width="16" Height="16" />
                                        </RadioButton>
                                    </StackPanel>
                                </Grid>-->

                                <!--<Border x:Name="searchBoxContainer" Grid.Column="1" Margin="0" Background="Transparent" BorderBrush="Gray" BorderThickness="0" Visibility="{Binding ShowSearchBox, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid Background="#333">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <xceed:WatermarkTextBox x:Name="_txtFilter"
                                                      Foreground="{DynamicResource ForegroundGray}"
                                                      VerticalAlignment="Center"
                                                      Background="Transparent" 
                                                      Height="20"
                                                      BorderThickness="0,0,0,1"
                                                      BorderBrush="#2a2a2a"
                                                      Text="{Binding Filter, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                                      Watermark="{TemplateBinding FilterWatermark}">
                                        </xceed:WatermarkTextBox>
                                    </Grid>                             
                                </Border>-->
                            </Grid>

                            <Grid Grid.Row="2" Background="{DynamicResource PanelBackground}">
                                <ScrollViewer VerticalScrollBarVisibility="Auto" >
                                    <xceed:PropertyItemsControl  x:Name="PART_PropertyItemsControl" IsTabStop="False" Focusable="False"
                                                     ItemsSource="{Binding Properties, RelativeSource={RelativeSource TemplatedParent}}"
                                                     ItemContainerStyle="{Binding PropertyContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Background="{DynamicResource PanelBackground}"
                                                     VerticalAlignment="Top">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>

                                        <ItemsControl.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="{x:Type GroupItem}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate>
                                                                    <Border >
                                                                        <Expander Header="{Binding Name}" Style="{StaticResource ExpanderStyle}" IsExpanded="True">
                                                                            <ItemsPresenter />
                                                                        </Expander>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                        </ItemsControl.GroupStyle>

                                    </xceed:PropertyItemsControl>
                                </ScrollViewer>

                                <Thumb x:Name="PART_DragThumb" HorizontalAlignment="Left" Width="5" Margin="6,0,0,0" Cursor="SizeWE">
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Border Background="Transparent" />
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>

                            </Grid>

                            <!--<GridSplitter Height="3" Grid.Row="3" HorizontalAlignment="Stretch" Visibility="{Binding ShowSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />-->
                            <!--Summary box-->
                            <!--<StackPanel Grid.Row="4" Margin="0,0,0,5" Visibility="{Binding ShowSummary, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <TextBlock Padding="2 2 2 0" FontWeight="Bold" Text="{Binding SelectedPropertyItem.DisplayName, RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBlock Padding="5 2 2 0" TextWrapping="WrapWithOverflow" Text="{Binding SelectedPropertyItem.Description, RelativeSource={RelativeSource TemplatedParent}}" />
                            </StackPanel>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <!--<Condition SourceName="searchBoxContainer" Property="Visibility" Value="Collapsed"/>
                                <Condition SourceName="sortButtonContainer" Property="Visibility" Value="Collapsed"/>-->
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="toolsContainer" Property="Visibility" Value="Collapsed" />-->
                        </MultiTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible" />
                        </Trigger>-->
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PIB" TargetType="{x:Type xceed:PropertyItemBase}">
        <Setter Property="Background" Value="{DynamicResource PanelBackground}" />
        <Setter Property="Margin" Value="0,3,5,3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xceed:PropertyItemBase}">
                    <Border ContextMenu="{Binding AdvancedOptionsMenu, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xceed:PropertyGrid}}" 
                                        ContextMenuService.Placement="Bottom">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding NameColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xceed:PropertyGrid}}}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border x:Name="PART_Name"
                                             Background="{DynamicResource PanelBackground}" 
                                             Margin="0,0,1,0" 
                                             VerticalAlignment="Stretch" 
                                             HorizontalAlignment="Stretch">
                                <Grid Margin="2,2,2,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid Margin="{Binding Level, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExpandableObjectMarginConverter}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="15" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <ToggleButton Grid.Column="0"
                                                        Template="{StaticResource ExpanderToggleButton}"
                                                        OverridesDefaultStyle="True"
                                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Visibility="{Binding IsExpandable, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                        <TextBlock Grid.Column="1" Text="{Binding DisplayName, RelativeSource={RelativeSource TemplatedParent}}" 
                                                         HorizontalAlignment="Stretch" 
                                                         VerticalAlignment="Center"
                                                         TextTrimming="CharacterEllipsis"
                                                   />
                                    </Grid>

                                    <Grid Grid.Column="1"
                                                 HorizontalAlignment="Right"
                                                 Margin="5,0,5,0"
                                                 Visibility="{Binding ShowAdvancedOptions, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xceed:PropertyGrid}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                
                                                 ContextMenu="{Binding AdvancedOptionsMenu, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xceed:PropertyGrid}}">

                                        <!--<Image x:Name="_optionsImage"
                                                     Width="11"
                                                     Height="11"
                                                     Source="{Binding AdvancedOptionsIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                                     ToolTip="{Binding AdvancedOptionsTooltip, RelativeSource={RelativeSource TemplatedParent}}" />-->
                                    </Grid>
                                </Grid>
                            </Border>

                            <Border x:Name="PART_Editor" Grid.Column="1" 
                                               Background="Transparent" 
                                               VerticalAlignment="Stretch" 
                                               HorizontalAlignment="Stretch">
                                <ContentControl x:Name="PART_ValueContainer" 
                                          Content="{TemplateBinding Editor}" 
                                          Focusable="False" IsTabStop="False" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xceed:PropertyGrid}, Converter={StaticResource InverseBoolConverter}}" >
                                </ContentControl>
                            </Border>

                            <Expander x:Name="_propertyExpander" Grid.ColumnSpan="2" Grid.Row="1" IsExpanded="{TemplateBinding IsExpanded}" Style="{StaticResource PropertyExpanderStyle}" IsEnabled="True">
                                <xceed:PropertyItemsControl x:Name="PART_PropertyItemsControl" IsTabStop="False" Focusable="False"
                                                 ItemsSource="{Binding Properties, RelativeSource={RelativeSource TemplatedParent}}"
                                                 ItemContainerStyle="{Binding PropertyContainerStyle, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </xceed:PropertyItemsControl>
                            </Expander>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="PART_Name" Property="Background" Value="#2a2a2a" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="PART_Name" Property="Background" Value="#2a2a2a" />
                                        <Setter TargetName="PART_Name" Property="TextElement.Foreground" Value="White" />
                                    </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" TargetName="PART_ValueContainer"  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"  />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip"
                                        Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--This style will be set to all PropertyItem instances (direct and expanded) in the property grid. -->
    <!--<Style TargetType="{x:Type xceed:PropertyItemBase}">
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="Background" Value="Purple"/>
    </Style>-->


</ResourceDictionary>